---
- hosts: all
  gather_facts: yes
  vars:
   - user: "{{ ansible_env.LOGNAME }}"
   - home: "{{ ansible_env.HOME }}"
   - zsh_custom: "{{ home }}/.oh-my-zsh/custom"
   - git_dir: "{{ home }}/git"
   - python_site: "{{ home}}/.local/bin/"
   - civis_redshift_user: "michaelfisher"

  tasks:
    - name: Make some dirs
      file:
        path: "{{ item }}"
        state: directory
        owner: "{{ user }}"
      with_items:
        - "{{ git_dir }}"
        - "{{ home }}/.vim"
        - "{{ home }}/.gnupg"
        - "/opt/{{ user }}"
        - "{{ home }}/.config/pgcli"
      become: true
      become_method: sudo
      tags:
        - files

    - name: Install homebrew
      shell: /usr/bin/ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"
      when: ansible_os_family == "Darwin"

    - name: Read encrypted ssh config
      include_vars: ssh_config.yml
      tags:
        - ssh

    - name: Read in databases config
      include_vars: databases.yml
      tags:
        - files

    - name: Template out ssh config
      copy:
        content: "{{ encrypted_content }}"
        dest: "{{ home }}/.ssh/config"
        owner: "{{ user }}"
        mode: "0644"
      tags:
        - ssh

    - name: delete things that we don't want
      file:
        path: "~/{{ item }}"
        state: absent
      with_items:
        - '.bashrc'
        - '.vim'
        - '.vimrc'
        - '.npmrc'
        - '.gitignore'
        - '.gitconfig'
        - '.tmux.conf'
        - '.gitmodules'
        - '.gnupg/gpg.conf'
        - '.zshrc'
        - '{{ zsh_custom }}'
      tags:
        - files

    - name: install oh-my-zsh
      git:
        repo: "ssh://git@github.com/robbyrussell/oh-my-zsh.git"
        dest: "{{ home }}/.oh-my-zsh"
        accept_hostkey: yes
        track_submodules: no
        force: yes
      tags:
        - files

    - name: Install powerlevel10k zsh theme
      git:
        repo: "ssh://git@github.com/romkatv/powerlevel10k.git"
        dest: "{{ zsh_custom }}/themes/powerlevel10k"
      tags:
        - files

    - name: Symlink powerlevel10k into place
      file:
        src: "{{ zsh_custom }}/themes/powerlevel10k/powerlevel10k.zsh-theme"
        dest: "{{ zsh_custom }}/themes/powerlevel10k.zsh-theme"
        state: link
      tags:
        - files

    - name: Template out home directory files
      template:
        src: "{{ item.src }}"
        dest: "{{ item.dest }}"
        owner: "{{ item.owner }}"
        mode: "{{ item.mode }}"
      with_items:
        - { src: '.aliases.j2', dest: "{{ home }}/.aliases", owner: "{{ user }}", mode: "0644" }
        - { src: '.gitconfig.j2', dest: "{{ home }}/.gitconfig", owner: "{{ user }}", mode: "0644" }
        - { src: '.gitignore.j2', dest: "{{ home }}/.gitignore", owner: "{{ user }}", mode: "0644" }
        - { src: '.tmux.conf.j2', dest: "{{ home }}/.tmux.conf", owner: "{{ user }}", mode: "0644" }
        - { src: '.vimrc.j2', dest: "{{ home }}/.vimrc", owner: "{{ user }}", mode: "0644" }
        - { src: '.zshrc.j2', dest: "{{ home }}/.zshrc", owner: "{{ user }}", mode: "0644" }
        - { src: '.inputrc.j2', dest: "{{ home }}/.inputrc", owner: "{{ user }}", mode: "0644" }
        - { src: 'gpg.conf.j2', dest: "{{ home }}/.gnupg/gpg.conf", owner: "{{ user }}", mode: "0644" }
        - { src: 'install_nvm.sh.j2', dest: "/opt/{{ user }}/install_nvm.sh", owner: "{{ user }}", mode: "0700" }
        - { src: '.config/pgcli/config', dest: "{{ home }}/.config/pgcli/config", owner: "{{ user }}", mode: "0644" }
      tags:
        - files

    - name: Copy into place .p10k file
      copy:
        src: "templates/.p10k.zsh.j2"
        dest: "{{ home }}/.p10k.zsh"
        owner: "{{ user }}"
        mode: "0644"
      tags:
        - files

    - name: Clone some repos
      git:
        repo: "ssh://git@github.com/{{ item.org }}/{{ item.name }}.git"
        dest: "{{ git_dir }}/{{ item.name }}"
        accept_hostkey: yes
        track_submodules: no
        force: yes
      with_items:
        - { org: 'powerline', name: 'fonts' }

    - name: Install homebrew items
      homebrew:
        name: ['awscli', 'adns','augeas','autoconf','automake','reattach-to-user-namespace','pgcli','postgresql','certbot','composer','coreutils','cscope','cmake','dialog','doctl','freetype','gdbm','gettext','ghostscript','giflib','gmp','gnupg','gnutls','icu4c','imagemagick','isl','jasper','jq','leptonica','libassuan','libevent','libffi','libgcrypt','libgpg-error','libidn2','libksba','libmpc','libpng','libpqxx','libtasn1','libtiff','libtool','libunistring','libusb','libyaml','lzo','macvim','mpfr','nettle','nmap','node','npth','nvm','mas','openjpeg','pcre','pinentry','qt','rbenv','readline','rclone','redis','s3cmd','the_silver_searcher','tmux','xz','yarn','watch']
        update_homebrew: yes
        upgrade_all: yes
      when: ansible_os_family == 'Darwin'
      tags:
        - homebrew

    - name: Install homebrew cask items
      homebrew_cask:
        name: "{{ item.name }}"
      with_items:
        - { name: omnifocus }
        - { name: signal }
        - { name: slack }
        - { name: google-chrome }
        - { name: keybase }
      tags:
        - homebrew_cask
      when: ansible_os_family == 'Darwin'

    - name: Install Mac App Store updates
      command: mas upgrade
      when:
        ansible_os_family == 'Darwin'
      register: mas
      become: true
      become_method: sudo
      tags:
        - appstore

    - name: Install Mac App Store updates
      command: "mas install {{ item.id }}"
      with_items:
        - { name: utc-bar, id: 525372278 }
        - { name: reeder-3, id: 880001334 }
        - { name: mactracker, id: 430255202 }
        - { name: deliveries, id: 525372278 }
        - { name: twitterific, id: 1289378661 }
      when:
        ansible_os_family == 'Darwin'
      register: mas
      become: true
      become_method: sudo
      tags:
        - appstore

    - name: Print mas updates
      debug:
        var: mas
      tags:
        - appstore

    - name: Install Vundle
      git:
        repo: "ssh://git@github.com/VundleVim/Vundle.vim.git"
        dest: "{{ home }}/.vim/bundle/Vundle.vim"
        accept_hostkey: yes
        force: yes
      tags:
        - files
        - vim

    - name: Install nvm
      command: "./install_nvm.sh"
      args:
        chdir: "/opt/{{ user }}"
        creates: "{{ home }}/.nvm"
      become: true
      become_method: sudo
      tags:
        - vim

    - name: Bundle some vundle
      command: "vim +PluginInstall +qall"
      args:
        chdir: "{{ home }}"
      tags:
        - files
        - vim
      register: plugins

    - name: Compile YouCompleteMe
      command: ./install.py --clang-completer
      args:
        chdir: "{{ home }}/.vim/bundle/YouCompleteMe"
      tags:
        - vim

    - name: Write out POSIX-compatible .profile
      blockinfile:
        dest: "~/.profile"
        insertafter: EOF
        create: yes
        content: "source ~/.zshrc"
      tags:
        - files

    - name: Install powerline shell fonts
      command: "./install.sh"
      args:
        chdir: "{{ git_dir }}/fonts"
      when: ansible_os_family == 'Darwin'
      tags:
        - files

    - name: Install other things in Linux
      apt:
        name:
          - gnupg2
          - libpq-dev
          - zsh
          - powerline
          - fonts-powerline
          - awscli
          - python3.7-dev
          - python3-pip
          - cmake
          - bzip2
          - gcc
          - libffi-dev
          - libyaml-dev
          - make
          - libssl-dev
      when: ansible_os_family == 'Debian'
      become: true
      become_method: sudo
      tags:
        - ruby

    - name: Upgrade Linux packages
      apt:
        upgrade: dist
      become: true
      become_method: sudo
      when: ansible_os_family == 'Debian'

    - name: Clone rbenv repository
      git: repo=ssh://git@github.com/rbenv/rbenv.git
           dest={{ home }}/.rbenv
           update=no
           force=yes
      tags:
        - ruby

    - name: Set correct owner and group
      file: path=~{{ user }}/.rbenv
            owner={{ user }}
            recurse=yes
      tags:
        - ruby

    - name: Clone ruby-build
      git: repo=https://github.com/rbenv/ruby-build.git
           dest=~{{ user }}/.rbenv/plugins/ruby-build
           update=no
      tags:
        - ruby

    - name: Set correct owner and group
      file: path={{ home }}/.rbenv/plugins/ruby-build
            owner={{ user }}
            recurse=yes
      tags:
        - ruby

    - name: Pip install items
      pip:
        name:
          - pgcli
      become: true
      become_method: sudo
      when: ansible_os_family == 'Debian'
      tags:
        - files

    - name: Delete pipenv caches
      file:
        path: "{{ home }}/Library/Caches/pipenv"
        state: absent
      when: ansible_os_family == 'Darwin'

    - name: Delete pipenv caches
      file:
        path: "{{ home }}/.cache/pipenv"
        state: absent
      when: ansible_os_family == 'Debian'

    - name: Delete homebrew caches
      command: "{{ item.command }}"
      with_items:
        - { command: "brew cleanup -s" }
      when: ansible_os_family == 'Darwin'

    - name: add {{extra_path}} to path
      lineinfile:
        dest: "/etc/environment"
        state: present
        backrefs: yes
        regexp: 'PATH=(["]*)((?!.*?{{python_site}}).*?)(["]*)$'
        line: 'PATH=\1\2:{{python_site}}\3'
      become: true
      become_method: sudo
      when: ansible_os_family == 'Debian'
