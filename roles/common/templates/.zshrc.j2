## load zsh stuff early
zmodload zsh/zprof
export ZSH=$HOME/.oh-my-zsh
plugins=(z evalcache zsh-nvm)
export ZSH_THEME="powerlevel10k/powerlevel10k"
source $ZSH/oh-my-zsh.sh
POWERLEVEL9K_DISABLE_CONFIGURATION_WIZARD=true

## aliases
if [ -f ~/.aliases ]; then
    . ~/.aliases
fi

export HISTTIMEFORMAT='%d/%m/%y %T '

export EDITOR="vim"

for key in "michaelfisher"; do
	if [[ -s ~/.ssh/${key} ]]; then
		ssh-add ~/.ssh/${key};
	fi
done

export GIT="$HOME/git"
function dateu() {
  date --date="@$1"
}

# streak deploy stuff
function deploy() {
  CHDIR=${HOME}/git/MailFooDeploy/
  echo "Changing to ${CHDIR}"
  cd $CHDIR
  echo "git pull"
  git pull
  echo "Press any key to contine..."
  while [ true ]; do
    read -t 3 -n 1
	if [ $? = 0 ]; then
      exit ;
	else
	  echo "Waiting for keypress..."
	fi
  done
  echo "./builders/clientjs/deploy.js ${1}"
  ./builders/clientjs/deploy.js $1
}

function timestamp() {
  date -j -f "%b %d %T %Z %Y" "${1}" "+%s"
}

export LDFLAGS="-L/usr/local/opt/bzip2/lib -L/usr/local/opt/zlib/lib -L/usr/local/opt/openssl@1.1/lib"
export CFLAGS="-I/usr/local/opt/bzip2/include -I/usr/local/opt/zlib/include -I/usr/local/opt/openssl@1.1/include -I$(xcrun --show-sdk-path)/usr/include -Wno-implicit-function-declaration"

# more annoying google stuffs
{% if ansible_os_family == "Darwin" %}
if [[ -n "$(brew --prefix)/Caskroom/google-cloud-sdk/google-cloud-sdk/" ]]; then
  source "$(brew --prefix)/Caskroom/google-cloud-sdk/latest/google-cloud-sdk/path.zsh.inc"
  source "$(brew --prefix)/Caskroom/google-cloud-sdk/latest/google-cloud-sdk/completion.zsh.inc"
fi
{% endif %}

# tabtab source for serverless package
# uninstall by removing these lines or running `tabtab uninstall serverless`
[ -f ${HOME}/.nvm/versions/node/v6.14.2/lib/node_modules/serverless/node_modules/tabtab/.completions/serverless.bash ] && . ${HOME}/.nvm/versions/node/v6.14.2/lib/node_modules/serverless/node_modules/tabtab/.completions/serverless.bash
# tabtab source for sls package
# uninstall by removing these lines or running `tabtab uninstall sls`
[ -f ${HOME}/.nvm/versions/node/v6.14.2/lib/node_modules/serverless/node_modules/tabtab/.completions/sls.bash ] && . ${HOME}/.nvm/versions/node/v6.14.2/lib/node_modules/serverless/node_modules/tabtab/.completions/sls.bash
# tabtab source for slss package
# uninstall by removing these lines or running `tabtab uninstall slss`
[ -f ${HOME}/.nvm/versions/node/v6.14.2/lib/node_modules/serverless/node_modules/tabtab/.completions/slss.bash ] && . ${HOME}/.nvm/versions/node/v6.14.2/lib/node_modules/serverless/node_modules/tabtab/.completions/slss.bash


# tabtab source for packages
# uninstall by removing these lines
[ -f ~/.config/tabtab/__tabtab.bash ] && . ~/.config/tabtab/__tabtab.bash || true

function ssh-downloads() {
	if [[ -f ${HOME}/Downloads/${2} ]]; then
		echo -n "Copying file to ${1} at location /home/michael/Downloads/${2}"
		scp -r ${HOME}/Downloads/${2} ${1}:/home/michael/Downloads/${2}
	fi
}

# gam
gam() { "/Users/michael/bin/gam/gam" "$@" ; }

tags() {
	if [[ -z $1 || -z $2 ]]; then;
		echo "Need to set variables..."
		echo "TAGS=\$1 bash -c "$HOME/boxen-create/provision.sh" --limit \$2"
	else
		pushd "$HOME/boxen-create"
		echo "TAGS=${1} . "$HOME/boxen-create/provision.sh" --limit ${2}"
		TAGS=$1 . "$HOME/boxen-create/provision.sh" --limit $2
		popd
	fi
}

# some annoying rbenv stuffs
if [[ -e $HOME/.rbenv ]]; then
  export PATH="$HOME/.rbenv/bin:$PATH"
  _evalcache rbenv init -
fi

# some annoying pyenv stuffs
if [[ -e $HOME/.pyenv ]]; then
	export PATH="$HOME/.pyenv/bin:$PATH"
	_evalcache pyenv init -
	eval "$(pyenv virtualenv-init -)"
fi

# 1Password
1p () {
	if [[ $1 != "" ]]; then
   		echo -n "op signin ${1}\n\n";
		eval $(op signin $1);
	else
		echo -n "Usage: 1p <account>\n";
	fi
}

# Export PATH here
export PATH="/usr/local/sbin:/usr/local/opt/openjdk/bin:$PATH"

