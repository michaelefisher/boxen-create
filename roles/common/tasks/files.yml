#! /usr/bin/env ansible-playbook

---
  - name: Delete things that we don't want
    file:
      path: "{{ home }}/{{ item }}"
      state: absent
      force: yes
    with_items:
      - '.vim/'
      - '.vimrc'
      - '.npmrc'
      - '.nvm/'
      - '.gitignore'
      - '.gitconfig'
      - '.tmux.conf'
      - '.gitmodules'
      - '.gnupg/gpg.conf'
      - '.zshrc'
      - '{{ zsh_custom }}'
    become: true
    become_method: sudo

  - name: Install certificates and trust them
    command: "security add-trusted-cert -r trustRoot -k /Library/Keychains/System.keychain -d {{ item.location }}/{{ item.src }}"
    with_items:
      - { src: 'NextDNS.cer', location: '{{ home }}/boxen-create/roles/common/templates' }
    become: yes
    become_method: sudo
    when: ansible_os_family == "Darwin"
    tags:
      - security

  - name: Make some dirs
    file:
      path: "{{ item }}"
      state: directory
      owner: "{{ user }}"
      mode: "0755"
    with_items:
      - "{{ git_dir }}"
      - "{{ home }}/.vim"
      - "{{ home }}/.gnupg"
      - "/opt/{{ user }}"
      - "{{ home }}/.config/pgcli"
    become: true
    become_method: sudo

  - name: Read encrypted ssh config
    include_vars: templates/.ssh/config.yml.j2.enc

  - name: Read encrypted s3cfg
    include_vars: templates/.s3cfg.enc

  - name: Template out ssh config
    copy:
      content: "{{ encrypted_content }}"
      dest: "{{ home }}/.ssh/config"
      owner: "{{ user }}"
      mode: "0644"

  - name: Delete ssh known hosts
    file:
      path: "{{ home }}/.ssh/known_hosts"
      state: absent

  - name: Template out s3cfg content
    copy:
      content: "{{ s3cfg_encrypted_content }}"
      dest: "{{ home }}/.s3cfg"
      owner: "{{ user }}"
      mode: "0644"

  - name: install oh-my-zsh
    git:
      repo: "ssh://git@github.com/ohmyzsh/ohmyzsh.git"
      dest: "{{ home }}/.oh-my-zsh"
      accept_hostkey: yes
      track_submodules: no
      version: "HEAD"
      force: yes

  - name: Install zsh
    git:
      repo: "ssh://git@github.com/{{ item.org }}/{{ item.name }}.git"
      dest: "{{ zsh_custom }}/{{ item.dir }}/{{ item.name }}"
      version: "{{ item.version }}"
    with_items:
      - { org: romkatv, name: powerlevel10k, dir: themes, version: HEAD }
      - { org: mroth, name: evalcache, dir: plugins, version: HEAD }
      - { org: lukechilds, name: zsh-nvm, dir: plugins, version: HEAD }

  - name: Symlink powerlevel10k into place
    file:
      src: "{{ zsh_custom }}/themes/powerlevel10k/powerlevel10k.zsh-theme"
      dest: "{{ zsh_custom }}/themes/powerlevel10k.zsh-theme"
      state: link

  - name: Install Tmux plugin manager
    git:
      repo: "ssh://git@github.com/tmux-plugins/tpm.git"
      dest: "{{ home }}/.tmux/plugins/tpm"
      version: "HEAD"

  - name: Template out home directory files
    template:
      src: "{{ item.src }}"
      dest: "{{ item.dest }}"
      owner: "{{ item.owner }}"
      mode: "{{ item.mode }}"
    with_items:
      - { src: '.aliases.j2', dest: "{{ home }}/.aliases", owner: "{{ user }}", mode: "0644" }
      - { src: '.gitconfig.j2', dest: "{{ home }}/.gitconfig", owner: "{{ user }}", mode: "0644" }
      - { src: '.gitignore.j2', dest: "{{ home }}/.gitignore", owner: "{{ user }}", mode: "0644" }
      - { src: '.tmux.conf.j2', dest: "{{ home }}/.tmux.conf", owner: "{{ user }}", mode: "0644" }
      - { src: '.vimrc.j2', dest: "{{ home }}/.vimrc", owner: "{{ user }}", mode: "0644" }
      - { src: '.zshrc.j2', dest: "{{ home }}/.zshrc", owner: "{{ user }}", mode: "0644" }
      - { src: '.inputrc.j2', dest: "{{ home }}/.inputrc", owner: "{{ user }}", mode: "0644" }
      - { src: 'gpg.conf.j2', dest: "{{ home }}/.gnupg/gpg.conf", owner: "{{ user }}", mode: "0644" }
      - { src: '.ssh/rc.j2', dest: "{{ home }}/.ssh/rc", owner: "{{ user }}", mode: "0644" }

  - name: Copy zshrc-mini into ~/Documents dir
    template:
      src: "templates/.zshrc-mini.j2"
      dest: "{{ home }}/Documents/.ashrc"
      owner: "root"
      mode: "0644"
    become: true
    become_method: sudo
    when: ansible_os_family == 'Darwin'

  - name: Copy into place .p10k file
    copy:
      src: "templates/.p10k.zsh.j2"
      dest: "{{ home }}/.p10k.zsh"
      owner: "{{ user }}"
      mode: "0644"

  - name: Copy rmvim file into place
    get_url:
      url: "https://raw.githubusercontent.com/wannesm/rmvim.vim/master/util/rmvim"
      dest: "/usr/local/bin"
      mode: "0555"
    become: true
    become_method: sudo
    when: ansible_os_family == 'Debian'

  - name: Clone some repos
    git:
      repo: "ssh://git@github.com/{{ item.org }}/{{ item.name }}.git"
      dest: "{{ git_dir }}/{{ item.name }}"
      accept_hostkey: yes
      track_submodules: no
      force: yes
      version: "{{ item.version }}"
    with_items:
      - { org: 'powerline', name: 'fonts', version: 'HEAD' }

  - name: Install Vundle
    git:
      repo: "ssh://git@github.com/VundleVim/Vundle.vim.git"
      dest: "{{ home }}/.vim/bundle/Vundle.vim"
      accept_hostkey: yes
      force: yes
      version: "HEAD"

  - name: Bundle some vundle (and other things)
    command: "vim +PluginInstall +qall"
    changed_when: True
    args:
      chdir: "{{ home }}"

  - name: Compile YouCompleteMe
    shell:
    args:
      cmd: "cd {{ home }}/.vim/bundle/YouCompleteMe && {{ ansible_python_interpreter }} install.py --ts-completer --js-completer --rust-completer"
    changed_when: true

  - name: Write out POSIX-compatible .profile
    blockinfile:
      dest: "~/.profile"
      insertafter: EOF
      create: yes
      content: "source ~/.zshrc"
      mode: 0644

  - name: Install powerline shell fonts
    command: "./install.sh"
    changed_when: True
    args:
      chdir: "{{ git_dir }}/fonts"

  - name: Install Chrome extension for external application opening
    command: "bash {{ home }}/boxen-create/roles/common/templates/browser/extensions/external_application/mac/install.sh"
    when: ansible_os_family == 'Darwin'
