---
- name: delete things that we don't want
  file:
    path: "~/{{ item }}"
    state: absent
    force: yes
  with_items:
    - '.bashrc'
    - '.vim/'
    - '.vimrc'
    - '.npmrc'
    - '.gitignore'
    - '.gitconfig'
    - '.tmux.conf'
    - '.gitmodules'
    - '.gnupg/gpg.conf'
    - '.zshrc'
    - '{{ zsh_custom }}'

- name: Make some dirs
  file:
    path: "{{ item }}"
    state: directory
    owner: "{{ user }}"
  with_items:
    - "{{ git_dir }}"
    - "{{ home }}/.vim"
    - "{{ home }}/.gnupg"
    - "/opt/{{ user }}"
    - "{{ home }}/.config/pgcli"
  become: true
  become_method: sudo

- name: Read encrypted ssh config
  include_vars: ssh_config.yml

- name: Read in databases config
  include_vars: databases.yml

- name: Template out ssh config
  copy:
    content: "{{ encrypted_content }}"
    dest: "{{ home }}/.ssh/config"
    owner: "{{ user }}"
    mode: "0644"

- name: install oh-my-zsh
  git:
    repo: "ssh://git@github.com/robbyrussell/oh-my-zsh.git"
    dest: "{{ home }}/.oh-my-zsh"
    accept_hostkey: yes
    track_submodules: no
    force: yes

- name: Install powerlevel10k zsh theme
  git:
    repo: "ssh://git@github.com/romkatv/powerlevel10k.git"
    dest: "{{ zsh_custom }}/themes/powerlevel10k"

- name: Symlink powerlevel10k into place
  file:
    src: "{{ zsh_custom }}/themes/powerlevel10k/powerlevel10k.zsh-theme"
    dest: "{{ zsh_custom }}/themes/powerlevel10k.zsh-theme"
    state: link

- name: Install Tmux plugin manager
  git:
    repo: "ssh://git@github.com/tmux-plugins/tpm.git"
    dest: "{{ home }}/.tmux/plugins/tpm"

- name: Template out home directory files
  template:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    owner: "{{ item.owner }}"
    mode: "{{ item.mode }}"
  with_items:
    - { src: '.aliases.j2', dest: "{{ home }}/.aliases", owner: "{{ user }}", mode: "0644" }
    - { src: '.gitconfig.j2', dest: "{{ home }}/.gitconfig", owner: "{{ user }}", mode: "0644" }
    - { src: '.gitignore.j2', dest: "{{ home }}/.gitignore", owner: "{{ user }}", mode: "0644" }
    - { src: '.tmux.conf.j2', dest: "{{ home }}/.tmux.conf", owner: "{{ user }}", mode: "0644" }
    - { src: '.vimrc.j2', dest: "{{ home }}/.vimrc", owner: "{{ user }}", mode: "0644" }
    - { src: '.zshrc.j2', dest: "{{ home }}/.zshrc", owner: "{{ user }}", mode: "0644" }
    - { src: '.inputrc.j2', dest: "{{ home }}/.inputrc", owner: "{{ user }}", mode: "0644" }
    - { src: 'gpg.conf.j2', dest: "{{ home }}/.gnupg/gpg.conf", owner: "{{ user }}", mode: "0644" }
    - { src: 'install_nvm.sh.j2', dest: "/opt/{{ user }}/install_nvm.sh", owner: "{{ user }}", mode: "0700" }
    - { src: '.config/pgcli/config', dest: "{{ home }}/.config/pgcli/config", owner: "{{ user }}", mode: "0644" }

- name: Copy into place .p10k file
  copy:
    src: "templates/.p10k.zsh.j2"
    dest: "{{ home }}/.p10k.zsh"
    owner: "{{ user }}"
    mode: "0644"

- name: Clone some repos
  git:
    repo: "ssh://git@github.com/{{ item.org }}/{{ item.name }}.git"
    dest: "{{ git_dir }}/{{ item.name }}"
    accept_hostkey: yes
    track_submodules: no
    force: yes
  with_items:
    - { org: 'powerline', name: 'fonts' }

- name: Install Vundle
  git:
    repo: "ssh://git@github.com/VundleVim/Vundle.vim.git"
    dest: "{{ home }}/.vim/bundle/Vundle.vim"
    accept_hostkey: yes
    force: yes

- name: Install nvm
  command: "./install_nvm.sh"
  args:
    chdir: "/opt/{{ user }}"
    creates: "{{ home }}/.nvm"
  become: true
  become_method: sudo

- name: Bundle some vundle
  command: "vim +PluginInstall +qall"
  args:
    chdir: "{{ home }}"

- name: Compile YouCompleteMe
  command: ./install.py --clang-completer
  args:
    chdir: "{{ home }}/.vim/bundle/YouCompleteMe"

- name: Write out POSIX-compatible .profile
  blockinfile:
    dest: "~/.profile"
    insertafter: EOF
    create: yes
    content: "source ~/.zshrc"

- name: Install powerline shell fonts
  command: "./install.sh"
  args:
    chdir: "{{ git_dir }}/fonts"
  when: ansible_os_family == 'Darwin'

